name: "Deploy Now: Deploy React to IONOS"

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
      project-id:
        required: true
        type: string
      branch-id:
        required: true
        type: string
      deployment-ids:
        require: true
        type: string
  push:
    path:
      - ./.github/workflows/deploy-to-ionos.yaml

concurrency: ${{ github.ref }}

jobs:
  build-and-deploy:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
    strategy:
      matrix:
        deployment-id: ${{ fromJson(inputs.deployment-ids) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build
        env:
          CI: false

      - name: Update deployment status
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: in_progress

      - name: Deploy to IONOS
        uses: ionos-deploy-now/deploy-to-ionos-action@v2
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          deployment-info: ${{ steps.deployment.outputs.info }}
          ssh-user: ${{ secrets[env.SSH_USERNAME_SECRET] }}
          ssh-key: ${{ secrets.IONOS_SSH_KEY }}
          dist-folder: build

      - name: Update deployment status
        if: ${{ always() }}
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ inputs.project-id }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: ${{ job.status }}
